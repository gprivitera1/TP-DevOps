name: Python CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    env:
      FLASK_ENV: testing
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask pytest flake8
        
    - name: Run linter
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Run unit tests
      run: pytest test_main.py -v
      
  docker-build-push:
    needs: test-and-lint
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/book-api:v1.0.0
          ${{ secrets.DOCKER_USERNAME }}/book-api:latest
        build-args: |
          APP_VERSION=1.0.0

    - name: Deploy to Render
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.RENDER_REGISTRY_USERNAME }}
        password: ${{ secrets.RENDER_REGISTRY_PASSWORD }}
        registry: registry.render.com
        
    - name: Push to Render Registry
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          registry.render.com/${{ secrets.RENDER_SERVICE_NAME }}:v1.0.0
          
    - name: Trigger Render Deployment
      run: |
        curl -X POST \
          -H "Accept: application/json" \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys