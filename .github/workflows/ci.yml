name: Python CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    env:
      FLASK_ENV: testing
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # Instala desde archivo
        
    - name: Run linter
      run: |
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Run unit tests
      run: pytest tests/ -v  # Ejecutar todos los tests en directorio tests/
      
  docker-build-push:
    needs: test-and-lint
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=moby/buildkit:master
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags:
          ${{ secrets.DOCKER_USERNAME }}/tp-devops:latest
        build-args: |
          APP_VERSION=1.0.0

  deploy-render:
    needs: docker-build-push
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Render Deployment
        run: |
          IMAGE_URL="docker.io/${{ secrets.DOCKER_USERNAME }}/tp-devops:latest"
          
          curl -X POST \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -d '{
              "clearCache": "clear",
              "image": {
                "imagePath": "'"$IMAGE_URL"'",
                "pullSecret": "none"
              }
            }' \
            "https://api.render.com/v1/services/srv-d1alsgemcj7s73fme8l0/deploys"  # TU SERVICE ID AQU√ç
            
      - name: Verify deployment
        run: |
          # Usando TU SERVICE NAME (ej: tp-devops)
          APP_URL="https://${{ secrets.RENDER_SERVICE_NAME }}.onrender.com/health"
          
          # Esperar 2 minutos (Render free tarda en iniciar)
          echo "Esperando 120 segundos..."
          sleep 120
          
          # Verificar endpoint de salud
          curl -f $APP_URL || exit 1    
